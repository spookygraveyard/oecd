1. Overall File Layout
==============================================================================================================================
Header (uncompressed)
Data (compressed)
Additional Information (optional) (compressed)

File-wide Endianness: Little Endian

2. Header
==============================================================================================================================
Total length: 34 bytes

IDENTIFIER
 1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
[*][*][*][*][*][*][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ]
First 6 bytes
Type: Fixed value
Hex: 20 2E 4F 45 43 44
Dec: 32 46 79 69 67 68
Details: These bytes are to be used as an additional format check, to ensure the file is in fact an OECD format file. The 
         bytes represent the ASCII encoding of “ .oecd”

DATA SECTION LENGTH
 1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
[ ][ ][ ][ ][ ][ ][*][*][*][*][*][*][*][*][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ]
Next 8 bytes
Type: Unsigned 64-bit integer
Details: This unsigned integer represents the number of bytes in the data portion of the file.

NUMERIC FORMAT
 1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
[ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][*][*][*][*][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ]
Next 4 bytes
Type: Signed 32-bit integer
Details: This integer represents the numeric representation of the data. If this value is 0 (zero), the data is stored as 
         integers. If the value is non-zero, the data is stored as IEEE floating points numbers.

NUMERIC SIZE
 1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
[ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][*][*][*][*][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ]
Next 4 bytes
Type: Signed 32-bit integer
Details: This integer represents the number of bytes used to store each individual number of data. Typical values are 2 (16 
         bit) 4 (32-bit) or 8 (64-bit). 

ADDITIONAL INFORMATION FORMAT
 1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
[ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][*][*][*][*][ ][ ][ ][ ][ ][ ][ ][ ]
Next 4 bytes
Type: Signed 32-bit integer
Details: This integer represents the type of the "Additional Information" section of the file, after the data portion. If the 
         value is: 
         0 - No Additional Information section is included after the data.
         1 - Standard OECD formatted Additional Information section. See details on this format below in the section 4 of this 
		     document.
         2 - Additional Information section does not conform to the OECD standard, but exists.

ADDITIONAL INFORMATION SIZE
 1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
[ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][*][*][*][*][ ][ ][ ][ ]
Next 4 bytes
Type: Unsigned 32-bit integer
Details: This unsigned integer represents the length of the Additional Information section in bytes.

CHANNEL COUNT
 1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
[ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][*][*][*][*]
Next 4 bytes
Type: Unsigned 32-bit integer
Details: This unsigned integer represents the number of channels within the data.

3. Data
==============================================================================================================================
OECD data should be a series of two-dimensional points. Each data point contains two numbers, which can either represent the 
point in Cartesian coordiates (X and Y) or polar coordiates (raduis and angle). The type of coordiates used should be 
mentioned in the Additional Information portion of the file. If no information is give, the data can be assumed to be in 
Cartesian coordiates. Data from each channel is given in numberical channel order for each time-index sequentially. For 
example: if the data has 3 channels, the data would begin with index 1 of channel 1, then index 1 of channel 2, then index 1 
of channel 3, then index 2 of channel 1, then index 2 of channel 2, and so on.

4. Additional Information
==============================================================================================================================

4.1 No Additional Information
------------------------------------------------------------------------------------------------------------------------------
If no additional information is specified, the file ends at the end of the data section. Data should be treated as individual 
channels of Cartesian data.

4.2 Standard OECD Formatted Additional Information
------------------------------------------------------------------------------------------------------------------------------
NOTE: THIS SECTION IS A WORK IN PROGRESS

The standard OECD additional information section is a JSON-formatted text section that contains all the information needed to properly display the eddy current data.
Descriptions of the fields of the additional information section are listed below, in order:
probeType: (String) the general layout of the probe (ex. “array”, “bobbin”, “rotating”)
detailedProbeType: (String) the full name of the probe used (ex. “3x12 HiRes X-Probe”)
dataChannelCount: (Number) the number of channels that contain eddy current data (as opposed to encoders, or other instrument data)
usesGroupedChannels: (Boolean) true if the channels should be grouped into distinct display groups. Typically, this is true when the probeType is “array”.
displayGroups: (Array) list of displayGroup descriptions (NOTE: can be ignored if usesGroupedChannels is false)
[
displayGroup {
dGIndex: (Number) unique sequential zero-indexed number. The order of in which to display the display groups
dGName: (String) description of the display group which will be displayed to users
dGChannelCount: (Number) the number of channels in this display group
dGFrequency: (Number) the frequency of the display group in kHz
dGChannels: (Array[Number]) the ordered list of channels contained in this displayGroup
}
]
hasCalibration: (Boolean) true if the data has a default calibration included with the data
calibration
[
calChannel {
calChanNumber: (Number) the channel for which the calibration data is valid
calAmplitude: (Number) the value to multiply the raw data with, to generate calibrated amplitude results (sometimes called the voltage conversion, as a term-of-art)
calPhase: (Number) the value in degrees that the raw channel data should be rotated. Note that this follows the eddy-current angle convention, with horizontal left being zero degrees, and clockwise rotation being positively increasing 
}
] 
encoderChannels: (Array) a list of the encoder channels and their details
[
encoderChannel {
encoderChanNumber: (Number) the channel containing the encoder data
encoderType: (String) what the encoder is measuring (ex. “pushwheel rotation”, “probe rotation”)
encoderTrigger: (String) what signal feature represents an encoder tick (ex. “rising edge”, “pulse length”)
encoderThreshold: (Number) the value above which indicates the useful encoder data  
}
]


4.3 Non-Standard Additional Information
------------------------------------------------------------------------------------------------------------------------------
This optional is included in the standard for to allow for flexibility and compatibility. There are no limits, rules, or
standards on what this data can or should be, other than it should remain under 4 GB in size to avoid overflowing the 
ADDITIONAL INFORMATION SIZE portion of the header. An expected use of this option is the inclusion of header information from 
other standards, allowing for easy conversion between formats.
